notification-queue:
  type: queue
  worker:
    handler: src/notification.handler
    name: sendNotification-${self:provider.stage}
    package:
      patterns:
        - src/notification.js
        - "!cfn/**"
    layers:
      - !Ref NodeModulesLambdaLayer

order-shipment-queue:
  type: queue
  worker:
    handler: src/order-shipment.handler
    name: orderShipment-${self:provider.stage}
    package:
      patterns:
        - src/order-shipment.js
        - "!cfn/**"
    layers:
      - !Ref NodeModulesLambdaLayer
    iamRoleStatementsName: order-shipment-queue-role-${self:provider.stage}-${self:provider.region}
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:UpdateItem
        Resource: !GetAtt orders.Arn
    environment:
      ORDER_TABLE: ${self:custom.settings.ORDER_DYNAMODB_TABLE}

digital-order-processing-queue:
  type: queue
  worker:
    handler: src/digital-order-processing.handler
    name: digitalOrderProcessing-${self:provider.stage}
    package:
      patterns:
        - src/digital-order-processing.js
        - "!cfn/**"
    layers:
      - !Ref NodeModulesLambdaLayer
    iamRoleStatementsName: digital-order-processing-queue-role-${self:provider.stage}-${self:provider.region}
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:UpdateItem
        Resource: !GetAtt orders.Arn
    environment:
      ORDER_TABLE: ${self:custom.settings.ORDER_DYNAMODB_TABLE}
